name: Typst PDF Release & Pages Deploy

on:
  workflow_call:
    inputs:
      TYPST_FILE_NAME:
        description: 'Base name of your .typ/.pdf (no extension)'
        required: true
        type: string

permissions:
  contents: write    # for GitHub Releases
  pages: write       # for Pages deployment
  id-token: write    # for configure-pages

jobs:
  build_and_release:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Typst environment
        uses: typst-community/setup-typst@v4

      - name: Clone Typst Math Notes
        run: |
          git clone https://github.com/hooyuser/typst_math_notes.git \
            $HOME/.local/share/typst/packages/local/math-notes

      - name: Download Typfont
        run: |
          curl -L -o typfont \
            https://github.com/hooyuser/typst_font_manager/releases/latest/download/typfont_linux
          chmod +x typfont
          echo "$(pwd)" >> $GITHUB_PATH

      - name: Cache Fonts
        uses: actions/cache@v4
        with:
          path: fonts
          key: ${{ runner.os }}-typst-fonts-${{ hashFiles('**/typfont') }}
          restore-keys: |
            ${{ runner.os }}-typst-fonts-

      - name: Check Fonts with Typfont
        run: |
          export CLICOLOR=1 CLICOLOR_FORCE=1
          ./typfont update -l "hooyuser/Font_Library" -g
          ./typfont check  -l "hooyuser/Font_Library" -g

      - name: Compile Typst document
        run: |
          typst fonts --ignore-system-fonts --variants --font-path fonts
          typst compile \
            ${{ inputs.TYPST_FILE_NAME }}.typ \
            ${{ inputs.TYPST_FILE_NAME }}.pdf \
            --ignore-system-fonts --font-path fonts

      - name: Delete old Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            try {
              const { data: { id } } =
                await github.rest.repos.getLatestRelease({ owner, repo });
              await github.rest.repos.deleteRelease({ owner, repo, release_id: id });
            } catch {}

      - name: Generate release tag
        id: tag
        run: |
          ts="latest_$(date +'%Y-%m-%d_%H-%M')"
          echo "release_tag=$ts" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: latest version
          body: Latest version of `${{ inputs.TYPST_FILE_NAME }}.pdf`
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: ${{ inputs.TYPST_FILE_NAME }}.pdf

      - name: Prepare Pages content
        run: |
          mkdir -p public
          cp "${{ inputs.TYPST_FILE_NAME }}.pdf" public/

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
